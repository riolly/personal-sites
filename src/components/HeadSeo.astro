---
import { SITE, OPEN_GRAPH } from "../config";

import type { SeoProps } from "../config";
export interface Props extends SeoProps {}

const env = import.meta.env.VERCEL_ENV;
const vercelUrl = `https://${import.meta.env.VERCEL_URL}`;

const { frontmatter, title, description, type, image } = Astro.props;
const meta = {
  canonicalUrl: new URL(Astro.url.pathname, Astro.site),
  title: frontmatter?.title ?? title ?? SITE.title,
  description: frontmatter?.description ?? description ?? SITE.description,
  type: type ?? "article",
  defaultLanguage: SITE.defaultLanguage,
  image: {
    src: new URL(
      frontmatter?.image.og.src ?? image?.src ?? OPEN_GRAPH.image.src,
      env === "preview" ? vercelUrl : Astro.url.origin,
    ),
    alt: frontmatter?.image.alt ?? image?.alt ?? OPEN_GRAPH.image.alt,
  },
};
---

<!-- Page Metadata -->
<link rel="canonical" href={meta.canonicalUrl} />
<meta name="description" property="og:description" content={meta.description} />

<!-- OpenGraph Tags -->
<meta property="og:title" content={meta.title} />
<meta property="og:type" content={meta.type} />
<meta property="og:url" content={meta.canonicalUrl} />
<meta property="og:locale" content={meta.defaultLanguage} />
<meta property="og:image" content={meta.image.src} />
<meta property="og:image:alt" content={meta.image.alt} />
<meta property="og:site_name" content={SITE.title} />

<!-- Twitter Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content={OPEN_GRAPH.twitter} />
<meta name="twitter:title" content={meta.title} />
<meta name="twitter:description" content={meta.description} />
<meta name="twitter:image" content={meta.image.src} />
<meta name="twitter:image:alt" content={meta.image.alt} />

<!--
  TODO: Add json+ld data, maybe https://schema.org/APIReference makes sense?
  Docs: https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data
  https://www.npmjs.com/package/schema-dts seems like a great resource for implementing this.
  Even better, there's a React component that integrates with `schema-dts`: https://github.com/google/react-schemaorg
-->
