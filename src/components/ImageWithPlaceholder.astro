---
import { Image } from "astro:assets";

import { getPlaiceholder } from "plaiceholder";
import { twMerge } from "tailwind-merge";

import type { ImageProps } from "../config";

const { image, class: className, classImage, classPlaceholder } = Astro.props;
const imgSrc = new URL(image.src, Astro.url.origin);
const buffer = await fetch(imgSrc).then(async (res) =>
  Buffer.from(await res.arrayBuffer()),
);
const { css } = await getPlaiceholder(buffer, { size: 10 });

export interface Props {
  image: ImageProps;
  class?: string;
  classPlaceholder?: string;
  classImage?: string;
}
---

<div class={twMerge("relative block overflow-hidden", className)}>
  <div
    style={css}
    class={twMerge(
    // TODO: breathing animation
      "absolute inset-0 h-full w-full scale-150 transform blur-xl",
      classPlaceholder,
    )}
  >
  </div>
  <Image
    id="image"
    src={image}
    alt={image.alt}
    loading="eager"
    class={twMerge(
      "relative opacity-0 data-[loaded=true]:opacity-100 data-[loaded=true]:animate-in data-[loaded=true]:fade-in-0 data-[loaded=true]:zoom-in-110 data-[loaded=true]:duration-300",
      classImage,
    )}
  />
</div>

<script>
  // TODO: don't show placeholder on cache load
  // FIX: sometime it's doesn't work
  const image = document.querySelector("img#image") as HTMLImageElement;
  image.addEventListener("load", () => {
    image.setAttribute("data-loaded", "true");
  });
</script>
